# Generated by Django 5.1.11 on 2025-06-14 21:44

import apps.shared.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_tenants.postgresql_backend.base
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TenantModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(db_index=True, max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('name', models.CharField(help_text='Name of the tenant/client', max_length=255)),
                ('url_suffix', models.CharField(blank=True, help_text='Custom URL suffix for this tenant (e.g., "company-name" for company-name.example.com). Only letters, numbers, and hyphens are allowed.', max_length=63, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_url_suffix', message='URL suffix can only contain letters, numbers, and hyphens.', regex='^[a-zA-Z0-9-]+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('trial', 'Trial'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='trial', help_text='Current status of the tenant', max_length=20)),
                ('environment', models.CharField(choices=[('development', 'Development'), ('testing', 'Testing'), ('staging', 'Staging'), ('production', 'Production')], default='production', help_text='Environment where this tenant is deployed', max_length=20)),
                ('paid_until', models.DateField(blank=True, help_text='Date until which the subscription is paid', null=True)),
                ('tenant_admin_email', models.EmailField(blank=True, help_text='Email address of the tenant admin', max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('company_id', models.IntegerField(default=1, editable=False)),
                ('client_id', models.IntegerField(default=1, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.IntegerField(blank=True, db_column='created_by', null=True)),
                ('updated_by', models.IntegerField(blank=True, db_column='updated_by', null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(blank=True, db_index=True, max_length=150)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Tenant User',
                'verbose_name_plural': 'Tenant Users',
                'db_table': 'shared_tenantuser',
                'ordering': ['email'],
            },
            managers=[
                ('objects', apps.shared.models.TenantUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True, help_text='Whether this is the primary domain for the tenant')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='shared.tenantmodel')),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
            },
        ),
    ]
